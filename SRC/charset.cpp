#include "headers.hpp"

Charset::Charset()
{
	std::vector<BYTE> _0 = { 0xF0, 0x90, 0x90, 0x90, 0xF0 };
	data.push_back(_0);

	std::vector<BYTE> _1 = { 0x20, 0x60, 0x20, 0x20, 0x70 };
	data.push_back(_1);

	std::vector<BYTE> _2 = { 0xF0, 0x10, 0xF0, 0x80, 0xF0 };
	data.push_back(_2);

	std::vector<BYTE> _3 = { 0xF0, 0x10, 0xF0, 0x10, 0xF0 };
	data.push_back(_3);

	std::vector<BYTE> _4 = { 0x90, 0x90, 0xF0, 0x10, 0x10 };
	data.push_back(_4);

	std::vector<BYTE> _5 = { 0xF0, 0x80, 0xF0, 0x10, 0xF0 };
	data.push_back(_5);

	std::vector<BYTE> _6 = { 0xF0, 0x80, 0xF0, 0x90, 0xF0 };
	data.push_back(_6);

	std::vector<BYTE> _7 = { 0xF0, 0x10, 0x20, 0x40, 0x40 };
	data.push_back(_7);

	std::vector<BYTE> _8 = { 0xF0, 0x90, 0xF0, 0x90, 0xF0 };
	data.push_back(_8);

	std::vector<BYTE> _9 = { 0xF0, 0x90, 0xF0, 0x10, 0xF0 };
	data.push_back(_9);

	std::vector<BYTE> _A = { 0xF0, 0x90, 0xF0, 0x90, 0x90 };
	data.push_back(_A);

	std::vector<BYTE> _B = { 0xE0, 0x90, 0xE0, 0x90, 0xE0 };
	data.push_back(_B);

	std::vector<BYTE> _C = { 0xF0, 0x80, 0x80, 0x80, 0xF0 };
	data.push_back(_C);

	std::vector<BYTE> _D = { 0xE0, 0x90, 0x90, 0x90, 0xE0 };
	data.push_back(_D);

	std::vector<BYTE> _E = { 0xF0, 0x80, 0xF0, 0x80, 0xF0 };
	data.push_back(_E);

	std::vector<BYTE> _F = { 0xF0, 0x80, 0xF0, 0x80, 0x80 };
	data.push_back(_F);
}

std::vector<BYTE> Charset::operator[](int idx)
{
	return data[idx];
}
